//https://leetcode.com/problems/container-with-most-water/

class Solution {
    public int maxArea(int[] height) {
        
        int start =0;
        int end=height.length -1;
        int maxArea=0;
        while(start< end){
            int area= Math.min(height[end], height[start]) * (Math.abs(start-end));
            if(area > maxArea){
                maxArea=area;
            }
            
            if(height[start] < height[end]){
                start++;
            }else{
                end--;
            }
        }
        return maxArea;
        
//         int length=1;
//         List<Integer> list= new ArrayList();
//         for(int i=0;i<height.length; i++){
//             for(int j=i+1; j<height.length; j++ ){
//                 int heightAs= Math.min(height[i],height[j]);
//                 length= j-i;
//                 list.add(heightAs*length);
//             }
//         }
        
//         return list.stream().max(Integer::compareTo).get();
    }
}